@import 'react-calendar/dist/Calendar.css';

@import './fonts/stylesheet.scss';

@import './rules/scss/null.scss';
@import './rules/scss/variables.scss';
@import './rules/scss/themes.scss';
@import './rules/scss/mixins.scss';

@import '../node_modules/three-dots/index';


html, * {
	font-size: $fontsize;
	color: $theme-txt;

	font-family: 'Montserrat', sans-serif;
	font-weight: 500;

	transition: 0;
}

#root {
	width: 100vw;
	height: 100vh;

	background: $theme-bodybg;
	position: relative;

	overflow: hidden;

	& #rootWrapper {
		width: 100%;
		height: 100%;

		overflow: auto;
		position: relative;

		display: flex;

		&.signin {
			& .sectionwidth {
				margin: 0;

				& #body {
					height: 100vh;
				}
			}
		}
		& .sectionwidth {
			width: 100%;
			margin-left: 350px;
		}
	}
}

#body {
	width: 100%;

	position: relative;
	// overflow: hidden;

	padding: $padding * 6;

	& .routetitle {
		font-size: $fontsize + 12px;
		font-weight: 700;

		color: $theme-color-txt;

		display: flex;
		align-items: center;
	}
	& .routedescription {
		font-size: $fontsize - 2px;
		font-weight: 600;

		color: $theme-txt-opacity;
	}
}	


::-webkit-scrollbar {
    width: 3px;
    background-color: transparent;
}
::-webkit-scrollbar-thumb {
    border-radius: 10px;
    background-color: $theme-color;
}
::-webkit-scrollbar-track {
    background-color: transparent;
}


.link {
	&:not(.hover), &:not(.hover) * {
		color: $theme-link;
	}

	transition: $transition;
	&:hover {
		&:not(.hover) {
			text-decoration: underline;
		}

		&.hover, &.hover * {
			color: $theme-link;
		}
	}
}


.btn {
	background: $theme-btn;
	color: $theme-btn-txt;

	user-select: none;

	& span, & svg {
		color: $theme-btn-txt;
	}
	& svg {
		fill: $theme-btn-txt;

		&:first-child {
			margin-right: $margin * 2;
		}
		&:last-child {
			margin-left: $margin * 2;
		}
	}
	& span ~ svg {
		transform: translateY(1px);
	}

	padding: $padding * 2 $padding * 4;
	border-radius: $borderRadius * 2;

	display: flex;
	align-items: center;
	justify-content: center;

	font-family: 'Gotham Pro';
	// transition: $transition;

	&.btn-icon {
		border-radius: 50%;
		aspect-ratio: 1 / 1;

		padding: $padding * 2;

		& svg {
			font-size: $fontsize + 6px;
		}
	}

	&.hover {
		&:not(.transparent) {
			background: $theme-btn-disabled;
			color: $theme-btn-disabled-txt;
		}

		& svg {
			color: $theme-txt;
			fill: $theme-txt;
		}

		&:hover {
			background: $theme-btn;
			color: $theme-btn-txt;

			& svg {
				color: $theme-btn-txt;
				fill: $theme-btn-txt;
			}
		}
	}

	&:disabled {
		&:not(.transparent) {
			background: $theme-btn-disabled;
			color: $theme-btn-disabled-txt;
		}
		&.transparent {
			opacity: .4;
		}

		cursor: not-allowed;

		&.loading .circleLoader span {
			border-color: $theme-bg-icon;
		}
	}

	&.transparent {
		background: transparent;
		color: $theme-txt;

		& span, & svg, & {
			color: $theme-txt;
			fill: $theme-txt;
		}

		&.loading {
			&:disabled {
				opacity: 1;
			}
			& .circleLoader span {
				border-color: $theme-color;
			}
		}
	}

	&.border {
		background: transparent;
		border: 1px solid $theme-color;

		& span, & svg, & {
			color: $theme-color;
			fill: $theme-color;
		}

		&:hover:not(:disabled):not(.transparent):not(.hover) {
			background: $theme-btn;
			border-color: transparent;
			
			& span, & svg, & {
				color: $theme-btn-txt;
				fill: $theme-btn-txt;
			}
		}
	}

	&.notcolor:not(:disabled) {
		background: $theme-txt-dark;
	}

	&.min {
		& span {
			font-size: $fontsize - 2px;
		}
                    
		padding: $padding * 2 $padding * 3;
		border-radius: $borderRadius;
	}
	&.medium {
		padding: $padding * 3 $padding * 5;
		border-radius: $borderRadius * 1.5;
	}
	&.big {
		& span {
			font-size: $fontsize + 2px;
		}
                    
		padding: $padding * 4 $padding * 8;
		border-radius: $borderRadius * 2;
	}
	&.verybig {
		& span {
			font-size: $fontsize + 8px;
		}
                    
		padding: $padding * 4 $padding * 8;
		border-radius: $borderRadius * 4;
	}


	&.loading {
		& * {
			opacity: 0;
		}

		position: relative;
		& .circleLoader {
			&, & * {
				opacity: 1;
			}

			position: absolute;
			z-index: $zindex_wrapper;
		}
	}
}

.form {
	position: relative;

	& .input + .input,
	& .input + .textarea,
	& .textarea + .input,
	& .textarea + .textarea {
		margin-top: $margin * 3;
	}

	& .formright {
		width: 100%;

		display: flex;
		justify-content: flex-end;
	}
}

input[type="checkbox"].switch,
input[type="radio"].switch {
    appearance: none;

    width: 46px;
    height: 24px;

    border: 2px solid $theme-input-border;
    border-radius: 20px;

    cursor: pointer;
    position: relative;

	transition: $transition;

	&:before {
		position: absolute;
	
		display: block;
		content: "";
	
		width: 16px;
		height: 16px;
	
		background: $theme-input-border;
		border-radius: 50%;
	
		transition: .4s;
	
		top: 2px;
		left: 4px;
	
		transform: none;
		opacity: 1;
	}
	&:checked {
		border-color: $theme-input-border-selected;
		&:before {
			left: calc(100% - 4px);
			transform: translateX(-100%);

			background: $theme-input-border-selected;
		}
	}
}

.inputcheckbox {
	& .inputcheckboxwrap {
		display: flex;
		align-items: flex-start;
	}

	position: relative;

	& + & {
		margin-top: $margin * 3;
	}

	& input {
		appearance: none;
	
		width: 16px;
		min-width: 16px;
		height: 16px;

		&.medium {
			width: 24px;
			min-width: 24px;
			height: 24px;
		}
	
		background-color: transparent;
		border: 1px solid $theme-input-border;
	
		border-radius: 3px;
	
		cursor: pointer;
		transition: .2s;
	
		position: relative;
		&:disabled {
			cursor: not-allowed;
			& ~ label {
				cursor: not-allowed;
			}
		}
	
		&:before {
			position: absolute;
	
			display: block;
			content: "";
	
			top: 50%;
			left: 50%;

			transform: translate(-50%, -50%);
	
			width: 80%;
			height: 80%;

			display: flex;
			align-items: center;
			justify-content: center;

			background: $theme-input-border-selected;
			border-radius: inherit;
	
			opacity: 0;
			transition: .2s;
		}
		&:checked {
			border-color: $theme-input-border-selected;
		}
		&:checked:before {
			opacity: 1;
		}
	}
	& label {
		display: inline;

		margin-left: $margin * 2;
		cursor: pointer;

		user-select: none;

		&, & * {
			font-size: $fontsize - 2px;
			line-height: $fontsize + 2px;
		}
	}

	& .error {
		display: block;
		width: 100%;

		margin-top: $margin * 2;
		white-space: nowrap;

		font-size: $fontsize - 2px;
		transition: .2s;

		color: $theme-color-red;

		opacity: 0;
		visibility: hidden;
		z-index: -1;

		&.show {
			opacity: 1;
			visibility: visible;
			z-index: $zindex_wrapper;
		}

		&:before {
			position: absolute;

			display: block;
			content: "";

			width: 10px;
			height: 10px;

			background-color: inherit;
			transform: rotate(45deg) translate(-50%, -50%);

			left: -5px;
			top: calc(50% + 3px);

			z-index: -1;
			border-radius: $borderRadius - 2px;
		}
	}


	&.medium {
		& input {
			width: 22px;
			min-width: 22px;
			height: 22px;
		}
	}
	&.big {
		& input {
			width: 28px;
			min-width: 28px;
			height: 28px;
		}
	}
}


.imagenotfound {
	width: 100%;
	min-width: 100%;
	height: 100%;

	display: flex;
	align-items: center;
	justify-content: center;

	opacity: .4;

	& .imagenotfound-wrapper {
		width: 100%;
		height: 100%;

		display: flex;
		justify-content: center;
		flex-wrap: wrap;
	}
	& .imagenotfound-title {
		width: 100%;
		text-align: center;

		margin-top: $margin * 2;

		font-size: 100%;
		font-weight: 600;

		color: black;
	}
	& .imagenotfound-img {
		width: 60%;
		height: auto;
	}
}


.usermini {
	width: 100%;

	display: flex;
	align-items: center;

	padding: $padding * 2;
	border-radius: $borderRadius * 2;

	transition: $transition;

	&:hover {
		background: $theme-bg-silver;
	}

	& .avatar {
		height: 100%;
	}
	
	& .desc {
		margin-left: $margin * 4;
		width: 100%;
		
		& .name {
			font-family: 'Akrobat';
			font-weight: 800;
			font-size: $fontsize + 2px;
		}
		& .onlinestatus {
			margin-top: $margin;

			font-family: 'Akrobat';
			font-weight: 800;
			font-size: $fontsize + 2px;

			color: $theme-txt;
			opacity: .4;

			&.online {
				color: $theme-color-green;
				opacity: 1;
			}
		}
		& .rating {
			margin-top: $margin * 2;

			display: flex;
			align-items: center;

			& .count {
				font-family: 'Akrobat';
				font-weight: 700;

				font-size: $fontsize + 6px;
				line-height: $fontsize;

				transform: translateY(1px);
			}
			& .stars {
				display: flex;
				align-items: center;
				gap: $padding * 2;

				margin-left: $margin * 3;

				width: 100%;
				& span {
					& img {
						width: 20px;
						height: 20px;
					}
				}
			}
		}
	}
}


#notify {
    position: fixed;
    z-index: $zindex_notify;

    right: $padding * 10;
    top: $padding * 8;

    display: flex;
    flex-direction: column;
    align-items: flex-end;

    & section + section {
        margin-top: $margin * 2;
    }
    & section {
		&.animation {
			animation: notifySectionHideAnimation $transition - .1s ease-in-out;

			transform: translateX(300%);
			@keyframes notifySectionHideAnimation {
				from {
					transform: none;
				}
				to {
					transform: translateX(300%);
				}
			}
		}

		animation: notifySectionShowAnimation $transition - .1s ease-in-out;
		@keyframes notifySectionShowAnimation {
			from {
				transform: translateX(300%);
			}
			to {
				transform: none;
			}
		}

        background: $theme-bg;
        box-shadow: $theme-shadow;

        padding: $padding * 4;
        border-radius: $borderRadius;

        max-width: 400px;

        & .text {
            white-space: pre-wrap;
            padding: 2px 0;
        }
        & .textbtn {
            display: flex;
            align-items: flex-end;
            gap: $padding * 4;

            &.btnbottom {
                display: block;
                & .action {
                    margin-top: $margin * 4;

                    display: flex;
                    justify-content: flex-end;
                }
            }

            & .btn {
                padding: 0;
                & span {
                    color: $theme-color;
                    font-weight: 600;

                    text-transform: uppercase;
                }
            }
        }
    }
}

.attachmentslist {
	display: flex;
	align-items: flex-start;
	flex-wrap: wrap;
	gap: $padding * 3;

	width: 100%;

	& .image {
		width: auto;
		height: auto;

		max-width: 110px;
		max-height: 70px;

		min-width: 50px;
		min-height: 50px;

		display: flex;
		align-items: center;
		justify-content: center;

		overflow: hidden;
		
		border-radius: $borderRadius * 2;

		& img {
			width: 100%;
			height: 100%;

			object-fit: cover;
		}
	}
}


.logotext {
	font-family: 'Akrobat';
	font-size: $fontsize + 12px;
	font-weight: 900;
	text-transform: uppercase;
	color: $theme-color;

	&.center {
		text-align: center;
	}
}
.logoicon {
	width: 100%;
	height: auto;
}
.logoico {
	width: 100%;
	height: 100%;
}


.hoverinfo {
	display: inline;
	margin-left: $margin * 2;

	cursor: pointer;

	position: relative;
	&:before {
		display: inline-block;
		content: "?";

		background: $theme-txt-dark;
		border-radius: 50%;

		width: 16px;
		height: 16px;

		color: white;

		padding-left: 5px;
		padding-top: 3px;

		font-size: $fontsize - 3px;
	}

	&[data-info]:hover:after {
		opacity: 1;
		visibility: visible;
		z-index: 1;
	}
	&[data-info]:after {
		position: absolute;
		z-index: -1;

		display: inline;
		content: attr(data-info);

		top: 0;
		left: calc(100% + $padding * 2);

		background: $theme-txt-opacity;
		color: white;

		min-width: 250px;

		font-size: $fontsize - 2px;
		padding: $padding;

		border-radius: $borderRadius;

		opacity: 0;
		visibility: hidden;

		transition: $transition;
		white-space: pre-wrap;
	}

	&.right:after {
		left: auto;
		right: calc(100% + $padding * 2);
	}
}


._loaderdiv {
	background: $theme-bg-opacity;
	border-radius: $borderRadius * 4;

	// position: relative;
	// overflow: hidden;

	// &:before {
	// 	position: absolute;
	// 	z-index: $zindex_wrapper;

	// 	display: block;
	// 	content: "";

	// 	height: 100%;
	// 	width: 100%;

	// 	background-color: $theme-bg-opacity;

	// 	animation: _loaderdivAnimation .8s infinite;
	// 	top: 0;
	// 	left: 0;

	// 	border-radius: inherit;

	// 	@keyframes _loaderdivAnimation {
	// 		from {
	// 			left: -100%;
	// 		}
	// 		to {
	// 			left: 100%;
	// 		}
	// 	}
	// }
}


.blockcount[data-count] {
	position: relative;
	&:after {
		position: absolute;
		z-index: 1;

		bottom: 50%;
		right: $padding * 2;

		transform: translateY(50%);

		display: block;
		content: attr(data-count);

		background: $theme-bg-silver;
		color: white;

		border-radius: $borderRadius;
		padding: 2px 3px;

		display: flex;
		align-items: center;
		justify-content: center;

		font-size: $fontsize - 4px;
	}

	&[data-count="1"], &[data-count="2"], &[data-count="3"], &[data-count="4"], &[data-count="5"],
	&[data-count="6"], &[data-count="7"], &[data-count="8"], &[data-count="9"] {
		&:after {
			border-radius: 50%;

			width: 17px;
			height: 17px;

			padding: 0;
			padding-bottom: 1px;
		}
	}
}

._onlinestatus_ {
	display: block;

	background: $theme-bg-silver;
	color: $theme-txt-opacity;

	border-radius: $borderRadius * 10;
	padding: $padding * 1.4 $padding * 3;

	font-size: $fontsize - 2px;
	font-weight: 600;
	font-family: 'Chalet';

	&.online {
		background: $theme-color-gradient;
		color: white;
	}
}


.clickoutsideelement {
	position: fixed;
	z-index: $zindex_null;

	top: 0;
	left: 0;

	width: 100vw;
	height: 100vh;
}


*[data-hint] {
    position: relative;
}
*[data-hint]:before {
    content: attr(data-hint);
    display: block;

    position: absolute;

    top: calc(-70% - 3px);
    left: 50%;

    transform: translate(-50%, 50%);
    font-size: $fontsize - 2px;

    background-color: $theme-bg;
	box-shadow: $theme-shadow;

    padding: 3px 7px;
    border-radius: 3px;

    transition: $transition - .1;

    opacity: 0;
    visibility: hidden;
    z-index: -1;

	white-space: nowrap;
}
*[data-hint]:hover:before {
    opacity: 1;
    visibility: visible;
    z-index: $zindex_hover;

    top: calc(-100% - 7px);
}



._roletag_ {
	padding: $padding $padding * 2;
	border-radius: $borderRadius;

	font-weight: 700;
	font-size: $fontsize;

	display: inline-block;

	background: $theme-bg;
	box-shadow: $theme-shadow;

	color: $theme-txt;

	&.big {
		padding: $padding * 2 $padding * 3.5;
		font-size: $fontsize + 2px;
	}

	position: relative;
	&::after {
		display: inline-block;
		content: attr(data-key);

		position: absolute;
		z-index: $zindex_hover;

		top: -$padding * 4;
		left: 50%;

		transform: translateX(-50%);

		background: rgba(0, 0, 0, .5);
		color: white;

		padding: $padding * .5 $padding;
		border-radius: $borderRadius / 2;

		font-size: $fontsize - 3px;
		transition: $transition;

		opacity: 0;
		visibility: hidden;
	}

	&:hover::after {
		top: -$padding * 5;

		opacity: 1;
		visibility: visible;
	}
}



.rcp.rcp-root {
	background: $theme-bg;
	box-shadow: $theme-shadow;

	width: 100%;

	&, & * {
		color: $theme-txt;
	}
	& input {
		border-color: $theme-input-border;
	}
	& .rcp-field {
		flex-direction: row;
		align-items: center;
		gap: $padding * 2;

		& input {
			order: 1;
		}
	}
}




._username_ {
	&.min {
		& h5 {
			font-size: $fontsize - 1px;
			font-weight: 500;
		}
		& span {
			width: 16px;
			min-width: 16px;
			height: 16px;
		}
	}
	&.normal {
		& h5 {
			font-size: $fontsize;
			font-weight: 500;
		}
	}
	&.big {
		& h5 {
			font-size: $fontsize + 4;
			font-weight: 700;
		}
	}

	& h5 {
		font-size: $fontsize + 2px;
		font-weight: 600;

		white-space: nowrap;
	}

	display: flex;
	align-items: center;
	gap: $padding;

	& span {
		width: 18px;
		min-width: 18px;
		height: 18px;

		display: block;
		transform: translateY(1px);

		background-position: center;
		background-repeat: no-repeat;
		background-size: cover;

		position: relative;
		&:before {
			position: absolute;

			display: block;
			content: attr(data-content);

			font-size: $fontsize - 4px;

			background: $theme-color-gradient;
			color: $theme-txt-reverse;

			padding: $padding;
			border-radius: $borderRadius;

			left: 50%;
			top: -5px;

			transform: translate(-50%, -50%);
			z-index: $zindex_hover;

			opacity: 0;
			visibility: hidden;

			transition: $transition;
		}
		&:hover {
			&:before {
				opacity: 1;
				visibility: visible;

				top: -16px;
			}
		}
	}

	& span.verification {
		background-image: url(../public/assets/accountstatus/verified_color.png);
	}
	& span.bot {
		background-image: url(../public/assets/accountstatus/bot_color.png);
	}
}



.translatename {
	& .translatename-title {
		font-size: $fontsize + 4px;
		font-weight: 700;
	}
	& .translatename-list {
		margin-top: $margin * 3;

		display: flex;
		flex-direction: column;
		gap: $padding * 2;

		& .translatename-elem {
			display: flex;
			align-items: center;
			justify-content: space-between;
			gap: $padding * 3;

			&.selected h1 {
				background: $theme-color-gradient;
				color: $theme-txt-reverse;
			}

			& h1 {
				display: block;

				width: 40%;
				min-width: 40%;

				height: 46px;

				background: $theme-bg-opacity;
				border-radius: $borderRadius;

				display: flex;
				align-items: center;
				justify-content: center;

				font-weight: 600;
			}
			& .input {
				width: calc(60% - $padding * 3);
				min-width: calc(60% - $padding * 3);
			}
		}
	}
	& .translatename-desc {
		margin-top: $margin * 2;

		& span {
			color: $theme-txt-opacity;
			white-space: pre-wrap;

			display: block;

			line-height: $fontsize + 4px;
			font-size: $fontsize - 2px;
		}
	}
}




.imagecover {
	width: 100%;
	height: 350px;

	object-fit: cover;
}